// /**
//  * Created by NganLang on 30/08/20.
//  */
// import PushNotificationIOS from '@react-native-community/push-notification-ios'
// import PushNotification from 'react-native-push-notification'
// import {isIOS} from '../Themes/Metrics'
//
// const firebaseSenderID = '961394188934'
// let instance
// const CHANNEL_ID = 'Batong'
//
// export default class LocalNotificationService {
//   constructor() {
//     this.lastId = 0
//     instance = this
//
//     this.createDefaultChannels()
//   }
//
//   static getInstance() {
//     return instance
//   }
//
//   configure = () => {
//     PushNotification.configure({
//       onRegister: function (token) {},
//       onNotification: this.onOpenNotification,
//
//       // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
//       senderID: firebaseSenderID,
//       // IOS ONLY (optional): default: all - Permissions to register.
//       permissions: {
//         alert: true,
//         badge: true,
//         sound: true,
//       },
//
//       // Should the initial notification be popped automatically
//       // default: true
//       popInitialNotification: true,
//
//       /**
//        * (optional) default: true
//        * - Specified if permissions (ios) and token (android and ios) will requested or not,
//        * - if not, you must call PushNotificationsHandler.requestPermissions() later
//        */
//       requestPermissions: true,
//     })
//   }
//
//   unRegister = () => {
//     PushNotification.unregister()
//   }
//
//   showNotification = (title, message, data, options) => {
//     console.log(title, message)
//     this.lastId++
//     PushNotification.localNotification({
//       /* Android Only Properties */
//       ...this.buildAndroidNotification(this.lastId, title, message, data, options),
//       /* IOS and Android Properties */
//       ...this.buildIOSNotification(this.lastId, title, message, data, options),
//       /* IOS and Android Properties */
//       title: title || '',
//       message: message || '',
//       playSound: options?.playSound || false,
//       soundName: options?.soundName || 'default',
//       userInteraction: false, // BOOLEAN: If the notification was opened by the user from the notification
//     })
//   }
//
//   createDefaultChannels = () => {
//     PushNotification.createChannel(
//       {
//         channelId: CHANNEL_ID, // (required)
//         channelName: CHANNEL_ID, // (required)
//         channelDescription: CHANNEL_ID, // (optional) default: undefined.
//         soundName: 'default', // (optional) See `soundName` parameter of `localNotification` function
//         importance: 4, // (optional) default: 4. Int value of the Android notification importance
//         vibrate: true, // (optional) default: true. Creates the default vibration patten if true.
//       },
//       created => {
//         // (optional) callback returns whether the channel was created, false means it already existed.
//       },
//     )
//   }
//
//   buildAndroidNotification = (id, title, message, data, options) => {
//     return {
//       id: id, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID+
//       channelId: CHANNEL_ID,
//       autoCancel: true, // (optional) default: true
//       largeIcon: options?.largeIcon || 'ic_launcher', // (optional) default: "ic_launcher"
//       smallIcon: options?.smallIcon || 'ic_launcher', // (optional) default: "ic_notification" with fallback for
//       // "ic_launcher"
//       bigText: message || '', // (optional) default: "message" prop
//       vibrate: options?.vibrate || true, // (optional) default: true
//       vibration: options?.vibration || 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
//       priority: options?.priority || 'high', // (optional) set notification priority, default: high
//       importance: 'high',
//       data: data,
//     }
//   }
//
//   buildIOSNotification = (id, title, message, data, options) => {
//     return {
//       alertAction: options?.alertAction || 'view', // (optional) default: view
//       category: options?.category || '', // (optional) default: null
//       userInfo: {id: id, data},
//     }
//   }
//
//   cancelAllLocalNotifications = () => {
//     if (isIOS()) PushNotificationIOS.removeAllDeliveredNotifications()
//     else PushNotification.cancelAllLocalNotifications()
//   }
//
//   onOpenNotification = notification => {}
// }
